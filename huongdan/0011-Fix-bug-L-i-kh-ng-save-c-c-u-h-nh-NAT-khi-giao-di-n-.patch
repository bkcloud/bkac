From 296a9facb0d523c3c1f795d1974910e60980642b Mon Sep 17 00:00:00 2001
From: neittien0110 <neittien0110@gmail.com>
Date: Tue, 15 Jul 2014 17:30:05 +0700
Subject: [PATCH 11/13] =?UTF-8?q?Fix=20bug:=20L=E1=BB=97i=20kh=C3=B4ng=20s?=
 =?UTF-8?q?ave=20=C4=91=C6=B0=E1=BB=A3c=20c=C3=A2u=20h=C3=ACnh=20NAT=20khi?=
 =?UTF-8?q?=20=E1=BB=9F=20giao=20di=E1=BB=87n=20ti=E1=BA=BFng=20Vi?=
 =?UTF-8?q?=E1=BB=87t.=20Nguy=C3=AAn=20nh=C3=A2n:=20n=C3=BAt=20Submit=20?=
 =?UTF-8?q?=C4=91=E1=BB=95i=20t=C3=AAn=20th=C3=A0nh=20"L=C6=B0u=20l?=
 =?UTF-8?q?=E1=BA=A1i".=20T=C3=AAn=20n=C3=A0y=20c=C5=A9ng=20b=E1=BB=8B=20k?=
 =?UTF-8?q?i=E1=BB=83m=20tra.=20Gi=E1=BA=A3i=20ph=C3=A1p:=20b=E1=BB=8F=20q?=
 =?UTF-8?q?ua=20key=20c=C3=B3=20t=C3=AAn=20Submit=20trong=20g=C3=B3i=20POS?=
 =?UTF-8?q?T.=20Vi=E1=BB=87c=20g=E1=BB=ADi=20tham=20s=E1=BB=91=20n=C3=A0y?=
 =?UTF-8?q?=20l=C3=A0=20th=E1=BB=ABa=20v=C3=A0=20c=C3=B3=20h=E1=BA=A1i.?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 usr/local/www/firewall_nat_1to1_edit.php | 595 +++++++++++-------------
 usr/local/www/firewall_nat_out_edit.php  | 766 +++++++++++++------------------
 2 files changed, 590 insertions(+), 771 deletions(-)

diff --git a/usr/local/www/firewall_nat_1to1_edit.php b/usr/local/www/firewall_nat_1to1_edit.php
index 726a304..54b976a 100755
--- a/usr/local/www/firewall_nat_1to1_edit.php
+++ b/usr/local/www/firewall_nat_1to1_edit.php
@@ -1,22 +1,22 @@
-<?php
+<?php 
 /* $Id$ */
 /*
 	firewall_nat_1to1_edit.php
 	part of m0n0wall (http://m0n0.ch/wall)
-
+	
 	Copyright (C) 2003-2004 Manuel Kasper <mk@neon1.net>.
 	All rights reserved.
-
+	
 	Redistribution and use in source and binary forms, with or without
 	modification, are permitted provided that the following conditions are met:
-
+	
 	1. Redistributions of source code must retain the above copyright notice,
 	   this list of conditions and the following disclaimer.
-
+	
 	2. Redistributions in binary form must reproduce the above copyright
 	   notice, this list of conditions and the following disclaimer in the
 	   documentation and/or other materials provided with the distribution.
-
+	
 	THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 	AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
@@ -39,6 +39,20 @@
 ##|*MATCH=firewall_nat_1to1_edit.php*
 ##|-PRIV
 
+function nat1to1cmp($a, $b) {
+	return ipcmp($a['external'], $b['external']);
+}
+
+function nat_1to1_rules_sort() {
+        global $g, $config;
+
+        if (!is_array($config['nat']['onetoone']))
+                return;
+
+
+        usort($config['nat']['onetoone'], "nat1to1cmp");
+}
+
 require("guiconfig.inc");
 require_once("interfaces.inc");
 require_once("filter.inc");
@@ -47,38 +61,29 @@ require("shaper.inc");
 $specialsrcdst = explode(" ", "any pptp pppoe l2tp openvpn");
 $ifdisp = get_configured_interface_with_descr();
 foreach ($ifdisp as $kif => $kdescr) {
-	$specialsrcdst[] = "{$kif}";
-	$specialsrcdst[] = "{$kif}ip";
+        $specialsrcdst[] = "{$kif}";
+        $specialsrcdst[] = "{$kif}ip";
 }
 
-if (!is_array($config['nat']['onetoone']))
+if (!is_array($config['nat']['onetoone'])) {
 	$config['nat']['onetoone'] = array();
-
+}
 $a_1to1 = &$config['nat']['onetoone'];
 
 $id = $_GET['id'];
 if (isset($_POST['id']))
 	$id = $_POST['id'];
 
-$after = $_GET['after'];
-if (isset($_POST['after']))
-	$after = $_POST['after'];
-
-if (isset($_GET['dup']))  {
-	$id = $_GET['dup'];
-	$after = $_GET['dup'];
-}
-
 if (isset($id) && $a_1to1[$id]) {
 	$pconfig['disabled'] = isset($a_1to1[$id]['disabled']);
 
 	address_to_pconfig($a_1to1[$id]['source'], $pconfig['src'],
-		$pconfig['srcmask'], $pconfig['srcnot'],
-		$pconfig['srcbeginport'], $pconfig['srcendport']);
+                $pconfig['srcmask'], $pconfig['srcnot'],
+                $pconfig['srcbeginport'], $pconfig['srcendport']);
 
-	address_to_pconfig($a_1to1[$id]['destination'], $pconfig['dst'],
-		$pconfig['dstmask'], $pconfig['dstnot'],
-		$pconfig['dstbeginport'], $pconfig['dstendport']);
+        address_to_pconfig($a_1to1[$id]['destination'], $pconfig['dst'],
+                $pconfig['dstmask'], $pconfig['dstnot'],
+                $pconfig['dstbeginport'], $pconfig['dstendport']);
 
 	$pconfig['interface'] = $a_1to1[$id]['interface'];
 	if (!$pconfig['interface'])
@@ -90,36 +95,35 @@ if (isset($id) && $a_1to1[$id]) {
 } else
 	$pconfig['interface'] = "wan";
 
-if (isset($_GET['dup']))
-	unset($id);
-
 if ($_POST) {
-
+	
 	unset($input_errors);
 	$pconfig = $_POST;
-	/*  run through $_POST items encoding HTML entties so that the user
-	 *  cannot think he is slick and perform a XSS attack on the unwilling
-	 */
-	foreach ($_POST as $key => $value) {
-		$temp = str_replace(">", "", $value);
-		$newpost = htmlentities($temp);
-		if($newpost <> $temp)
-			$input_errors[] = sprintf(gettext("Invalid characters detected (%s).  Please remove invalid characters and save again."),$temp);
-	}
+        /*  run through $_POST items encoding HTML entties so that the user
+         *  cannot think he is slick and perform a XSS attack on the unwilling
+         */
+        foreach ($_POST as $key => $value)
+        if ($key <> "Submit")
+        {
+                $temp = str_replace(">", "", $value);
+                $newpost = htmlentities($temp);
+                if($newpost <> $temp)
+                        $input_errors[] = sprintf(gettext("Invalid characters detected (%s).  Please remove invalid characters and save again."),$temp);
+        }
 
 	/* input validation */
 	$reqdfields = explode(" ", "interface external");
 	$reqdfieldsn = array(gettext("Interface"), gettext("External subnet"));
 	if ($_POST['srctype'] == "single" || $_POST['srctype'] == "network") {
-		$reqdfields[] = "src";
-		$reqdfieldsn[] = gettext("Source address");
-	}
-	if ($_POST['dsttype'] == "single" || $_POST['dsttype'] == "network") {
-		$reqdfields[] = "dst";
-		$reqdfieldsn[] = gettext("Destination address");
-	}
-
-	do_input_validation($_POST, $reqdfields, $reqdfieldsn, $input_errors);
+                $reqdfields[] = "src";
+                $reqdfieldsn[] = gettext("Source address");
+        }
+        if ($_POST['dsttype'] == "single" || $_POST['dsttype'] == "network") {
+                $reqdfields[] = "dst";
+                $reqdfieldsn[] = gettext("Destination address");
+        }
+	
+	do_input_validation($_POST, $reqdfields, $reqdfieldsn, &$input_errors);
 
 	if ($_POST['external'])
 		$_POST['external'] = trim($_POST['external']);
@@ -129,55 +133,55 @@ if ($_POST) {
 		$_POST['dst'] = trim($_POST['dst']);
 
 	if (is_specialnet($_POST['srctype'])) {
-		$_POST['src'] = $_POST['srctype'];
-		$_POST['srcmask'] = 0;
-	} else if ($_POST['srctype'] == "single") {
-		$_POST['srcmask'] = 32;
-	}
-	if (is_specialnet($_POST['dsttype'])) {
-		$_POST['dst'] = $_POST['dsttype'];
-		$_POST['dstmask'] = 0;
-	} else if ($_POST['dsttype'] == "single") {
-		$_POST['dstmask'] = 32;
-	} else if (is_ipaddr($_POST['dsttype'])) {
-		$_POST['dst'] = $_POST['dsttype'];
-		$_POST['dstmask'] = 32;
-		$_POST['dsttype'] = "single";
-	}
+                $_POST['src'] = $_POST['srctype'];
+                $_POST['srcmask'] = 0;
+        } else if ($_POST['srctype'] == "single") {
+                $_POST['srcmask'] = 32;
+        }
+        if (is_specialnet($_POST['dsttype'])) {
+                $_POST['dst'] = $_POST['dsttype'];
+                $_POST['dstmask'] = 0;
+        } else if ($_POST['dsttype'] == "single") {
+                $_POST['dstmask'] = 32;
+        } else if (is_ipaddr($_POST['dsttype'])) {
+                $_POST['dst'] = $_POST['dsttype'];
+                $_POST['dstmask'] = 32;
+                $_POST['dsttype'] = "single";
+        }
 
 	/* For external, user can enter only ip's */
 	if (($_POST['external'] && !is_ipaddr($_POST['external'])))
 		$input_errors[] = gettext("A valid external subnet must be specified.");
 
 	/* For dst, if user enters an alias and selects "network" then disallow. */
-	if ($_POST['dsttype'] == "network" && is_alias($_POST['dst']) )
-		$input_errors[] = gettext("You must specify single host or alias for alias entries.");
+        if ($_POST['dsttype'] == "network" && is_alias($_POST['dst']) ) 
+                $input_errors[] = gettext("You must specify single host or alias for alias entries.");
 
 	/* For src, user can enter only ip's or networks */
 	if (!is_specialnet($_POST['srctype'])) {
-		if (($_POST['src'] && !is_ipaddr($_POST['src']))) {
-			$input_errors[] = sprintf(gettext("%s is not a valid internal IP address."), $_POST['src']);
-		}
-		if (($_POST['srcmask'] && !is_numericint($_POST['srcmask']))) {
-			$input_errors[] = gettext("A valid internal bit count must be specified.");
-		}
-	}
+                if (($_POST['src'] && !is_ipaddr($_POST['src']))) {
+                        $input_errors[] = sprintf(gettext("%s is not a valid internal IP address."), $_POST['src']);
+                }
+                if (($_POST['srcmask'] && !is_numericint($_POST['srcmask']))) {
+                        $input_errors[] = gettext("A valid internal bit count must be specified.");
+                }
+        }
 
 	/* For dst, user can enter ip's, networks or aliases */
-	if (!is_specialnet($_POST['dsttype'])) {
-		if (($_POST['dst'] && !is_ipaddroralias($_POST['dst']))) {
-			$input_errors[] = sprintf(gettext("%s is not a valid destination IP address or alias."), $_POST['dst']);
-		}
-		if (($_POST['dstmask'] && !is_numericint($_POST['dstmask']))) {
-			$input_errors[] = gettext("A valid destination bit count must be specified.");
-		}
-	}
+        if (!is_specialnet($_POST['dsttype'])) {
+                if (($_POST['dst'] && !is_ipaddroralias($_POST['dst']))) {
+                        $input_errors[] = sprintf(gettext("%s is not a valid destination IP address or alias."), $_POST['dst']);
+                }
+                if (($_POST['dstmask'] && !is_numericint($_POST['dstmask']))) {
+                        $input_errors[] = gettext("A valid destination bit count must be specified.");
+                }
+        }
 
 	/* check for overlaps with other 1:1 */
 	foreach ($a_1to1 as $natent) {
 		if (isset($id) && ($a_1to1[$id]) && ($a_1to1[$id] === $natent))
 			continue;
-
+		
 		if (check_subnets_overlap($_POST['internal'], $_POST['subnet'], $natent['internal'], $natent['subnet'])) {
 			//$input_errors[] = "Another 1:1 rule overlaps with the specified internal subnet.";
 			//break;
@@ -192,11 +196,11 @@ if ($_POST) {
 		$natent['descr'] = $_POST['descr'];
 		$natent['interface'] = $_POST['interface'];
 
-		pconfig_to_address($natent['source'], $_POST['src'],
-			$_POST['srcmask'], $_POST['srcnot']);
+		 pconfig_to_address($natent['source'], $_POST['src'],
+                        $_POST['srcmask'], $_POST['srcnot']);
 
-		pconfig_to_address($natent['destination'], $_POST['dst'],
-			$_POST['dstmask'], $_POST['dstnot']);
+                pconfig_to_address($natent['destination'], $_POST['dst'],
+                        $_POST['dstmask'], $_POST['dstnot']);
 
 		if ($_POST['natreflection'] == "enable" || $_POST['natreflection'] == "disable")
 			$natent['natreflection'] = $_POST['natreflection'];
@@ -205,12 +209,9 @@ if ($_POST) {
 
 		if (isset($id) && $a_1to1[$id])
 			$a_1to1[$id] = $natent;
-		else {
-			if (is_numeric($after))
-				array_splice($a_1to1, $after+1, 0, array($natent));
-			else
-				$a_1to1[] = $natent;
-		}
+		else
+			$a_1to1[] = $natent;
+		nat_1to1_rules_sort();
 
 		if (write_config())
 			mark_subsystem_dirty('natconf');
@@ -230,23 +231,23 @@ include("head.inc");
 <script type="text/javascript">
 //<![CDATA[
 function typesel_change() {
-	switch (document.iform.srctype.selectedIndex) {
-		case 1: /* single */
-			document.iform.src.disabled = 0;
-			document.iform.srcmask.value = "";
-			document.iform.srcmask.disabled = 1;
-			break;
-		case 2: /* network */
-			document.iform.src.disabled = 0;
-			document.iform.srcmask.disabled = 0;
-			break;
-		default:
-			document.iform.src.value = "";
-			document.iform.src.disabled = 1;
-			document.iform.srcmask.value = "";
-			document.iform.srcmask.disabled = 1;
-			break;
-	}
+        switch (document.iform.srctype.selectedIndex) {
+                case 1: /* single */
+                        document.iform.src.disabled = 0;
+                        document.iform.srcmask.value = "";
+                        document.iform.srcmask.disabled = 1;
+                        break;
+                case 2: /* network */
+                        document.iform.src.disabled = 0;
+                        document.iform.srcmask.disabled = 0;
+                        break;
+                default:
+                        document.iform.src.value = "";
+                        document.iform.src.disabled = 1;
+                        document.iform.srcmask.value = "";
+                        document.iform.srcmask.disabled = 1;
+                        break;
+        }
 	switch (document.iform.dsttype.selectedIndex) {
 		case 1: /* single */
 			document.iform.dst.disabled = 0;
@@ -263,34 +264,31 @@ function typesel_change() {
 			document.iform.dstmask.value = "";
 			document.iform.dstmask.disabled = 1;
 			break;
-	}
+        }
 }
 //]]>
 </script>
 
-<?php
-include("fbegin.inc");
-if ($input_errors)
-	print_input_errors($input_errors);
-?>
-<form action="firewall_nat_1to1_edit.php" method="post" name="iform" id="iform">
-	<table width="100%" border="0" cellpadding="6" cellspacing="0" summary="firewall nat 1to1 edit">
+<?php include("fbegin.inc"); ?>
+<?php if ($input_errors) print_input_errors($input_errors); ?>
+            <form action="firewall_nat_1to1_edit.php" method="post" name="iform" id="iform">
+              <table width="100%" border="0" cellpadding="6" cellspacing="0" summary="firewall nat 1to1 edit">
+				<tr>
+					<td colspan="2" valign="top" class="listtopic"><?=gettext("Edit NAT 1:1 entry"); ?></td>
+				</tr>	
 		<tr>
-			<td colspan="2" valign="top" class="listtopic"><?=gettext("Edit NAT 1:1 entry"); ?></td>
+                        <td width="22%" valign="top" class="vncellreq"><?=gettext("Disabled"); ?></td>
+                        <td width="78%" class="vtable">
+                                <input name="disabled" type="checkbox" id="disabled" value="yes" <?php if ($pconfig['disabled']) echo "checked=\"checked\""; ?> />
+                                <strong><?=gettext("Disable this rule"); ?></strong><br />
+                                <span class="vexpl"><?=gettext("Set this option to disable this rule without removing it from the list."); ?></span>
+                        </td>
 		</tr>
 		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Disabled"); ?></td>
-			<td width="78%" class="vtable">
-				<input name="disabled" type="checkbox" id="disabled" value="yes" <?php if ($pconfig['disabled']) echo "checked=\"checked\""; ?> />
-				<strong><?=gettext("Disable this rule"); ?></strong><br />
-				<span class="vexpl"><?=gettext("Set this option to disable this rule without removing it from the list."); ?></span>
-			</td>
-		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Interface"); ?></td>
-			<td width="78%" class="vtable">
+			  <td width="22%" valign="top" class="vncellreq"><?=gettext("Interface"); ?></td>
+			  <td width="78%" class="vtable">
 				<select name="interface" class="formselect">
-<?php
+					<?php
 					foreach ($ifdisp as $if => $ifdesc)
 						if(have_ruleint_access($if))
 							$interfaces[$if] = $ifdesc;
@@ -315,236 +313,175 @@ if ($input_errors)
 					if  ($config['openvpn']["openvpn-server"] || $config['openvpn']["openvpn-client"])
 						$interfaces["openvpn"] = "OpenVPN";
 
-					foreach ($interfaces as $iface => $ifacename):
-?>
-						<option value="<?=$iface;?>" <?php if ($iface == $pconfig['interface']) echo "selected=\"selected\""; ?>>
-							<?=htmlspecialchars($ifacename);?>
-						</option>
-<?php
-					endforeach;
-?>
+					foreach ($interfaces as $iface => $ifacename): 
+					?>
+					<option value="<?=$iface;?>" <?php if ($iface == $pconfig['interface']) echo "selected=\"selected\""; ?>>
+					<?=htmlspecialchars($ifacename);?>
+					</option>
+					<?php endforeach; ?>
 				</select><br/>
 			  <span class="vexpl"><?=gettext("Choose which interface this rule applies to"); ?>.<br/>
 			  <?=gettext("Hint: in most cases, you'll want to use WAN here"); ?>.</span></td>
 		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("External subnet IP"); ?></td>
-			<td width="78%" class="vtable">
-				<input name="external" type="text" class="formfld" id="external" size="20" value="<?=htmlspecialchars($pconfig['external']);?>" />
-				<br/>
-				<span class="vexpl">
-					<?=gettext("Enter the external (usually on a WAN) subnet's starting address for the 1:1 mapping.  " .
-						"The subnet mask from the internal address below will be applied to this IP address."); ?><br/>
-					<?=gettext("Hint: this is generally an address owned by the router itself on the selected interface."); ?>
-				</span>
+                <tr> 
+                  <td width="22%" valign="top" class="vncellreq"><?=gettext("External subnet IP"); ?></td>
+                  <td width="78%" class="vtable"> 
+                    <input name="external" type="text" class="formfld" id="external" size="20" value="<?=htmlspecialchars($pconfig['external']);?>" /> 
+                    <br/>
+                    <span class="vexpl"><?=gettext("Enter the external (usually on a WAN) subnet's starting address for the 1:1 mapping.  The subnet mask from the internal address below will be applied to this IP address."); ?><br/>
+                    <?=gettext("Hint: this is generally an address owned by the router itself on the selected interface."); ?></span>
 			</td>
-		</tr>
+                </tr>
 		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Internal IP"); ?></td>
-			<td width="78%" class="vtable">
-				<input name="srcnot" type="checkbox" id="srcnot" value="yes" <?php if ($pconfig['srcnot']) echo "checked=\"checked\""; ?> />
-				<strong><?=gettext("not"); ?></strong>
-				<br />
-				<?=gettext("Use this option to invert the sense of the match."); ?>
-				<br />
-				<br />
-				<table border="0" cellspacing="0" cellpadding="0" summary="source">
-					<tr>
-						<td><?=gettext("Type:"); ?>&nbsp;&nbsp;</td>
-						<td>
-							<select name="srctype" class="formselect" onchange="typesel_change()">
-<?php
-							$sel = is_specialnet($pconfig['src']);
-?>
-								<option value="any"     <?php if ($pconfig['src'] == "any") { echo "selected=\"selected\""; } ?>><?=gettext("any"); ?></option>
-								<option value="single"  <?php if ((($pconfig['srcmask'] == 32) || !isset($pconfig['srcmask'])) && !$sel) { echo "selected=\"selected\""; $sel = 1; } ?>>
-									<?=gettext("Single host"); ?>
-								</option>
-								<option value="network" <?php if (!$sel) echo "selected=\"selected\""; ?>><?=gettext("Network"); ?></option>
+                        <td width="22%" valign="top" class="vncellreq"><?=gettext("Internal IP"); ?></td>
+                        <td width="78%" class="vtable">
+                                <input name="srcnot" type="checkbox" id="srcnot" value="yes" <?php if ($pconfig['srcnot']) echo "checked=\"checked\""; ?> />
+                                <strong><?=gettext("not"); ?></strong>
+                                <br />
+                                <?=gettext("Use this option to invert the sense of the match."); ?>
+                                <br />
+                                <br />
+                                <table border="0" cellspacing="0" cellpadding="0" summary="source">
+                                        <tr>
+                                                <td><?=gettext("Type:"); ?>&nbsp;&nbsp;</td>
+                                                <td>
+                                                        <select name="srctype" class="formselect" onchange="typesel_change()">
 <?php
-							if(have_ruleint_access("pptp")):
-?>
-								<option value="pptp"    <?php if ($pconfig['src'] == "pptp") { echo "selected=\"selected\""; } ?>><?=gettext("PPTP clients"); ?></option>
-<?php
-							endif;
-							if(have_ruleint_access("pppoe")):
-?>
-								<option value="pppoe"   <?php if ($pconfig['src'] == "pppoe") { echo "selected=\"selected\""; } ?>><?=gettext("PPPoE clients"); ?></option>
+                                                                $sel = is_specialnet($pconfig['src']); ?>
+                                                                <option value="any"     <?php if ($pconfig['src'] == "any") { echo "selected=\"selected\""; } ?>><?=gettext("any"); ?></option>
+                                                                <option value="single"  <?php if ((($pconfig['srcmask'] == 32) || !isset($pconfig['srcmask'])) && !$sel) { echo "selected=\"selected\""; $sel = 1; } ?>><?=gettext("Single host"); ?></option>
+                                                                <option value="network" <?php if (!$sel) echo "selected=\"selected\""; ?>><?=gettext("Network"); ?></option>
+                                                                <?php if(have_ruleint_access("pptp")): ?>
+                                                                <option value="pptp"    <?php if ($pconfig['src'] == "pptp") { echo "selected=\"selected\""; } ?>><?=gettext("PPTP clients"); ?></option>
+                                                                <?php endif; ?>
+                                                                <?php if(have_ruleint_access("pppoe")): ?>
+                                                                <option value="pppoe"   <?php if ($pconfig['src'] == "pppoe") { echo "selected=\"selected\""; } ?>><?=gettext("PPPoE clients"); ?></option>
+                                                                <?php endif; ?>
+                                                                 <?php if(have_ruleint_access("l2tp")): ?>
+                                                                <option value="l2tp"   <?php if ($pconfig['src'] == "l2tp") { echo "selected=\"selected\""; } ?>><?=gettext("L2TP clients"); ?></option>
+                                 <?php endif; ?>
 <?php
-							endif;
-							if(have_ruleint_access("l2tp")):
-?>
-								<option value="l2tp"   <?php if ($pconfig['src'] == "l2tp") { echo "selected=\"selected\""; } ?>><?=gettext("L2TP clients"); ?></option>
-<?php
-							endif;
-							foreach ($ifdisp as $ifent => $ifdesc):
-								if(have_ruleint_access($ifent)):
-?>
-									<option value="<?=$ifent;?>" <?php if ($pconfig['src'] == $ifent) { echo "selected=\"selected\""; } ?>>
-										<?=htmlspecialchars($ifdesc);?> <?=gettext("subnet"); ?>
-									</option>
-									<option value="<?=$ifent;?>ip"<?php if ($pconfig['src'] ==  $ifent . "ip") { echo "selected=\"selected\""; } ?>>
-										<?=$ifdesc?> <?=gettext("address");?>
-									</option>
-<?php
-								endif;
-							endforeach;
-?>
-							</select>
-						</td>
-					</tr>
-					<tr>
-						<td><?=gettext("Address:"); ?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="src" type="text" class="formfld" id="src" size="20" value="<?php if (!is_specialnet($pconfig['src'])) echo htmlspecialchars($pconfig['src']);?>" /> /
-							<select name="srcmask" class="formselect" id="srcmask">
-<?php
-							for ($i = 31; $i > 0; $i--):
-?>
-                                                	        <option value="<?=$i;?>" <?php if ($i == $pconfig['srcmask']) echo "selected=\"selected\""; ?>><?=$i;?></option>
-<?php
-							endfor;
-?>
-							</select>
-						</td>
-					</tr>
-				</table>
-				<br/>
-				<span class="vexpl"><?=gettext("Enter the internal (LAN) subnet for the 1:1 mapping. The subnet size specified for the internal subnet will be applied to the external subnet."); ?></span>
+                                                                foreach ($ifdisp as $ifent => $ifdesc): ?>
+                                                                <?php if(have_ruleint_access($ifent)): ?>
+                                                                        <option value="<?=$ifent;?>" <?php if ($pconfig['src'] == $ifent) { echo "selected=\"selected\""; } ?>><?=htmlspecialchars($ifdesc);?> <?=gettext("subnet"); ?></option>
+                                                                        <option value="<?=$ifent;?>ip"<?php if ($pconfig['src'] ==  $ifent . "ip") { echo "selected=\"selected\""; } ?>>
+                                                                                <?=$ifdesc?> <?=gettext("address");?>
+                                                                        </option>
+                                                                <?php endif; endforeach; ?>
+                                                        </select>
+                                                </td>
+                                        </tr>
+                                        <tr>
+                                                <td><?=gettext("Address:"); ?>&nbsp;&nbsp;</td>
+                                                <td>
+                                                        <input name="src" type="text" class="formfld" id="src" size="20" value="<?php if (!is_specialnet($pconfig['src'])) echo htmlspecialchars($pconfig['src']);?>" /> /
+                                                        <select name="srcmask" class="formselect" id="srcmask">
+<?php                                           for ($i = 31; $i > 0; $i--): ?>
+                                                        <option value="<?=$i;?>" <?php if ($i == $pconfig['srcmask']) echo "selected=\"selected\""; ?>><?=$i;?></option>
+<?php                                           endfor; ?>
+                                                        </select>
+                                                </td>
+                                        </tr>
+                                </table>
+			<br/>
+                     <span class="vexpl"><?=gettext("Enter the internal (LAN) subnet for the 1:1 mapping. The subnet size specified for the internal subnet will be applied to the external subnet."); ?></span>
 			</td>
-		</tr>
+                </tr>
 		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Destination"); ?></td>
-			<td width="78%" class="vtable">
-				<input name="dstnot" type="checkbox" id="dstnot" value="yes" <?php if ($pconfig['dstnot']) echo "checked=\"checked\""; ?> />
-				<strong><?=gettext("not"); ?></strong>
-				<br />
-				<?=gettext("Use this option to invert the sense of the match."); ?>
-				<br />
-				<br />
-				<table border="0" cellspacing="0" cellpadding="0" summary="destination">
-					<tr>
-						<td><?=gettext("Type:"); ?>&nbsp;&nbsp;</td>
-						<td>
-							<select name="dsttype" class="formselect" onchange="typesel_change()">
-<?php
-							$sel = is_specialnet($pconfig['dst']); ?>
-								<option value="any" <?php if (empty($pconfig['dst']) || $pconfig['dst'] == "any") { echo "selected=\"selected\""; } ?>><?=gettext("any"); ?></option>
-								<option value="single" <?php if (($pconfig['dstmask'] == 32) && !$sel) { echo "selected=\"selected\""; $sel = 1; } ?>>
-									<?=gettext("Single host or alias"); ?>
-								</option>
-								<option value="network" <?php if (!$sel && !empty($pconfig['dst'])) echo "selected=\"selected\""; ?>>
-									<?=gettext("Network"); ?>
-								</option>
+                        <td width="22%" valign="top" class="vncellreq"><?=gettext("Destination"); ?></td>
+                        <td width="78%" class="vtable">
+                                <input name="dstnot" type="checkbox" id="dstnot" value="yes" <?php if ($pconfig['dstnot']) echo "checked=\"checked\""; ?> />
+                                <strong><?=gettext("not"); ?></strong>
+                                        <br />
+                                <?=gettext("Use this option to invert the sense of the match."); ?>
+                                        <br />
+                                        <br />
+                                <table border="0" cellspacing="0" cellpadding="0" summary="destination">
+                                        <tr>
+                                                <td><?=gettext("Type:"); ?>&nbsp;&nbsp;</td>
+                                                <td>
+                                                        <select name="dsttype" class="formselect" onchange="typesel_change()">
 <?php
-							if(have_ruleint_access("pptp")):
-?>
-								<option value="pptp" <?php if ($pconfig['dst'] == "pptp") { echo "selected=\"selected\""; } ?>>
-									<?=gettext("PPTP clients"); ?>
-								</option>
-<?php
-							endif;
-							if(have_ruleint_access("pppoe")):
-?>
-								<option value="pppoe" <?php if ($pconfig['dst'] == "pppoe") { echo "selected=\"selected\""; } ?>>
-									<?=gettext("PPPoE clients"); ?>
-								</option>
+                                                                $sel = is_specialnet($pconfig['dst']); ?>
+                                                                <option value="any" <?php if (empty($pconfig['dst']) || $pconfig['dst'] == "any") { echo "selected=\"selected\""; } ?>><?=gettext("any"); ?></option>
+                                                                <option value="single" <?php if (($pconfig['dstmask'] == 32) && !$sel) { echo "selected=\"selected\""; $sel = 1; } ?>><?=gettext("Single host or alias"); ?></option>
+                                                                <option value="network" <?php if (!$sel && !empty($pconfig['dst'])) echo "selected=\"selected\""; ?>><?=gettext("Network"); ?></option>
+                                                                <?php if(have_ruleint_access("pptp")): ?>
+                                                                <option value="pptp" <?php if ($pconfig['dst'] == "pptp") { echo "selected=\"selected\""; } ?>><?=gettext("PPTP clients"); ?></option>
+                                                                <?php endif; ?>
+                                                                <?php if(have_ruleint_access("pppoe")): ?>
+                                                                <option value="pppoe" <?php if ($pconfig['dst'] == "pppoe") { echo "selected=\"selected\""; } ?>><?=gettext("PPPoE clients"); ?></option>
+                                                                <?php endif; ?>
+                                                                <?php if(have_ruleint_access("l2tp")): ?>
+                                                                <option value="l2tp" <?php if ($pconfig['dst'] == "l2tp") { echo "selected=\"selected\""; } ?>><?=gettext("L2TP clients"); ?></option>
+                                                                <?php endif; ?>
+
+<?php                                                   foreach ($ifdisp as $if => $ifdesc): ?>
+                                                                <?php if(have_ruleint_access($if)): ?>
+                                                                        <option value="<?=$if;?>" <?php if ($pconfig['dst'] == $if) { echo "selected=\"selected\""; } ?>><?=htmlspecialchars($ifdesc);?> <?=gettext("subnet"); ?></option>
+                                                                        <option value="<?=$if;?>ip"<?php if ($pconfig['dst'] == $if . "ip") { echo "selected=\"selected\""; } ?>>
+                                                                                <?=$ifdesc;?> <?=gettext("address");?>
+                                                                        </option>
+<?php							endif; endforeach; ?>
+                                                	</select>
+                                                </td>
+                                        </tr>
+                                        <tr>
+                                                <td><?=gettext("Address:"); ?>&nbsp;&nbsp;</td>
+                                                <td>
+                                                        <input name="dst" type="text" autocomplete="off" class="formfldalias" id="dst" size="20" value="<?php if (!is_specialnet($pconfig['dst'])) echo htmlspecialchars($pconfig['dst']);?>" />
+                                                        /
+                                                        <select name="dstmask" class="formselect" id="dstmask">
 <?php
-							endif;
-							if(have_ruleint_access("l2tp")):
-?>
-								<option value="l2tp" <?php if ($pconfig['dst'] == "l2tp") { echo "selected=\"selected\""; } ?>>
-									<?=gettext("L2TP clients"); ?>
-								</option>
-<?php
-							endif;
-
-							foreach ($ifdisp as $if => $ifdesc):
-								if(have_ruleint_access($if)):
-?>
-									<option value="<?=$if;?>" <?php if ($pconfig['dst'] == $if) { echo "selected=\"selected\""; } ?>><?=htmlspecialchars($ifdesc);?>
-										<?=gettext("subnet"); ?>
-									</option>
-									<option value="<?=$if;?>ip"<?php if ($pconfig['dst'] == $if . "ip") { echo "selected=\"selected\""; } ?>>
-										<?=$ifdesc;?> <?=gettext("address");?>
-									</option>
-<?php
-								endif;
-							endforeach;
-?>
-							</select>
-						</td>
-					</tr>
-					<tr>
-						<td><?=gettext("Address:"); ?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="dst" type="text" autocomplete="off" class="formfldalias" id="dst" size="20" value="<?php if (!is_specialnet($pconfig['dst'])) echo htmlspecialchars($pconfig['dst']);?>" />
-							/
-							<select name="dstmask" class="formselect" id="dstmask">
-<?php
-							for ($i = 31; $i > 0; $i--):
-?>
-								<option value="<?=$i;?>" <?php if ($i == $pconfig['dstmask']) echo "selected=\"selected\""; ?>><?=$i;?></option>
-<?php
-							endfor;
-?>
-							</select>
-						</td>
-					</tr>
-				</table>
-				<br/>
-				<span class="vexpl">
-					<?=gettext("The 1:1 mapping will only be used for connections to or from the specified destination."); ?><br/>
-					<?=gettext("Hint: this is usually 'any'."); ?>
-				</span>
-			</td>
-		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncell"><?=gettext("Description"); ?></td>
-			<td width="78%" class="vtable">
-				<input name="descr" type="text" class="formfld unknown" id="descr" size="40" value="<?=htmlspecialchars($pconfig['descr']);?>" />
-				<br/>
-				<span class="vexpl">
-					<?=gettext("You may enter a description here for your reference (not parsed)."); ?>
-				</span>
-			</td>
-		</tr>
+                                                        for ($i = 31; $i > 0; $i--): ?>
+                                                                <option value="<?=$i;?>" <?php if ($i == $pconfig['dstmask']) echo "selected=\"selected\""; ?>><?=$i;?></option>
+<?php                                           endfor; ?>
+                                                        </select>
+                                                </td>
+                                        </tr>
+                                </table>
+			<br/>
+                     <span class="vexpl"><?=gettext("The 1:1 mapping will only be used for connections to or from the specified destination."); ?><br/>
+                     <?=gettext("Hint: this is usually 'any'."); ?></span>
+                     </td>
+                </tr>
+                <tr> 
+                  <td width="22%" valign="top" class="vncell"><?=gettext("Description"); ?></td>
+                  <td width="78%" class="vtable"> 
+                    <input name="descr" type="text" class="formfld unknown" id="descr" size="40" value="<?=htmlspecialchars($pconfig['descr']);?>" /> 
+                    <br/> <span class="vexpl"><?=gettext("You may enter a description here " .
+                    "for your reference (not parsed)."); ?></span></td>
+                </tr>
 		<tr>
 			<td width="22%" valign="top" class="vncell"><?=gettext("NAT reflection"); ?></td>
 			<td width="78%" class="vtable">
 				<select name="natreflection" class="formselect">
-					<option value="default" <?php if ($pconfig['natreflection'] != "enable" && $pconfig['natreflection'] != "disable") echo "selected=\"selected\""; ?>>
-						<?=gettext("use system default"); ?>
-					</option>
-					<option value="enable" <?php if ($pconfig['natreflection'] == "enable") echo "selected=\"selected\""; ?>>
-						<?=gettext("enable"); ?>
-					</option>
-					<option value="disable" <?php if ($pconfig['natreflection'] == "disable") echo "selected=\"selected\""; ?>>
-						<?=gettext("disable"); ?>
-					</option>
+					<option value="default" <?php if ($pconfig['natreflection'] != "enable" && $pconfig['natreflection'] != "disable") echo "selected=\"selected\""; ?>><?=gettext("use system default"); ?></option>
+					<option value="enable" <?php if ($pconfig['natreflection'] == "enable") echo "selected=\"selected\""; ?>><?=gettext("enable"); ?></option>
+					<option value="disable" <?php if ($pconfig['natreflection'] == "disable") echo "selected=\"selected\""; ?>><?=gettext("disable"); ?></option>
 				</select>
 			</td>
 		</tr>
-		<tr>
-			<td width="22%" valign="top">&nbsp;</td>
-			<td width="78%">
-				<input name="Submit" type="submit" class="formbtn" value="<?=gettext("Save"); ?>" /> <input type="button" class="formbtn" value="<?=gettext("Cancel"); ?>" onclick="history.back()" />
-				<?php if (isset($id) && $a_1to1[$id]): ?>
-				<input name="id" type="hidden" value="<?=htmlspecialchars($id);?>" />
-				<?php endif; ?>
-			</td>
-		</tr>
-	</table>
+                <tr> 
+                  <td width="22%" valign="top">&nbsp;</td>
+                  <td width="78%"> 
+                    <input name="Submit" type="submit" class="formbtn" value="<?=gettext("Save"); ?>" /> <input type="button" class="formbtn" value="<?=gettext("Cancel"); ?>" onclick="history.back()" />
+                    <?php if (isset($id) && $a_1to1[$id]): ?>
+                    <input name="id" type="hidden" value="<?=htmlspecialchars($id);?>" />
+                    <?php endif; ?>
+                  </td>
+                </tr>
+              </table>
 </form>
 <script type="text/javascript">
 //<![CDATA[
-	typesel_change();
+        typesel_change();
 //]]>
 </script>
 <script type="text/javascript">
 //<![CDATA[
 	var addressarray = <?= json_encode(get_alias_list(array("host", "network", "openvpn", "urltable"))) ?>;
-	var oTextbox1 = new AutoSuggestControl(document.getElementById("dst"), new StateSuggestions(addressarray));
+        var oTextbox1 = new AutoSuggestControl(document.getElementById("dst"), new StateSuggestions(addressarray));
 //]]>
 </script>
 <?php include("fend.inc"); ?>
diff --git a/usr/local/www/firewall_nat_out_edit.php b/usr/local/www/firewall_nat_out_edit.php
index 5e113a5..62c2b1a 100755
--- a/usr/local/www/firewall_nat_out_edit.php
+++ b/usr/local/www/firewall_nat_out_edit.php
@@ -1,34 +1,34 @@
 <?php
 /* $Id$ */
 /*
-	firewall_nat_out_edit.php
-	Copyright (C) 2004 Scott Ullrich
-	All rights reserved.
-
-	originally part of m0n0wall (http://m0n0.ch/wall)
-	Copyright (C) 2003-2004 Manuel Kasper <mk@neon1.net>.
-	All rights reserved.
-
-	Redistribution and use in source and binary forms, with or without
-	modification, are permitted provided that the following conditions are met:
-
-	1. Redistributions of source code must retain the above copyright notice,
-	   this list of conditions and the following disclaimer.
-
-	2. Redistributions in binary form must reproduce the above copyright
-	   notice, this list of conditions and the following disclaimer in the
-	   documentation and/or other materials provided with the distribution.
-
-	THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
-	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
-	AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-	AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-	OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-	SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-	INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-	CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-	ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-	POSSIBILITY OF SUCH DAMAGE.
+    firewall_nat_out_edit.php
+    Copyright (C) 2004 Scott Ullrich
+    All rights reserved.
+
+    originally part of m0n0wall (http://m0n0.ch/wall)
+    Copyright (C) 2003-2004 Manuel Kasper <mk@neon1.net>.
+    All rights reserved.
+
+    Redistribution and use in source and binary forms, with or without
+    modification, are permitted provided that the following conditions are met:
+
+    1. Redistributions of source code must retain the above copyright notice,
+       this list of conditions and the following disclaimer.
+
+    2. Redistributions in binary form must reproduce the above copyright
+       notice, this list of conditions and the following disclaimer in the
+       documentation and/or other materials provided with the distribution.
+
+    THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
+    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
+    AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+    AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
+    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+    POSSIBILITY OF SUCH DAMAGE.
 */
 /*
 	pfSense_MODULE:	nat
@@ -45,14 +45,14 @@ require("guiconfig.inc");
 require_once("filter.inc");
 require("shaper.inc");
 
-if (!is_array($config['nat']['outbound']))
-	$config['nat']['outbound'] = array();
+if (!is_array($config['nat']['advancedoutbound']))
+	$config['nat']['advancedoutbound'] = array();
 
-if (!is_array($config['nat']['outbound']['rule'])) {
-	$config['nat']['outbound']['rule'] = array();
+if (!is_array($config['nat']['advancedoutbound']['rule'])) {
+	$config['nat']['advancedoutbound']['rule'] = array();
 }
 
-$a_out = &$config['nat']['outbound']['rule'];
+$a_out = &$config['nat']['advancedoutbound']['rule'];
 
 if (!is_array($config['aliases']['alias']))
 	$config['aliases']['alias'] = array();
@@ -100,7 +100,6 @@ if (isset($id) && $a_out[$id]) {
 	}
 	$pconfig['descr'] = $a_out[$id]['descr'];
 	$pconfig['nonat'] = $a_out[$id]['nonat'];
-	$pconfig['disabled'] = isset($a_out[$id]['disabled']);
 	$pconfig['staticnatport'] = isset($a_out[$id]['staticnatport']);
 	$pconfig['nosync'] = isset($a_out[$id]['nosync']);
 } else {
@@ -111,7 +110,7 @@ if (isset($id) && $a_out[$id]) {
 }
 
 if (isset($_GET['dup'])) {
-	unset($id);
+        unset($id);
 }
 
 if ($_POST) {
@@ -126,21 +125,23 @@ if ($_POST) {
 
 	unset($input_errors);
 	$pconfig = $_POST;
-	/*  run through $_POST items encoding HTML entties so that the user
-	 *  cannot think he is slick and perform a XSS attack on the unwilling
-	 */
-	foreach ($_POST as $key => $value) {
-		$temp = str_replace(">", "", $value);
-		$newpost = htmlentities($temp);
-		if($newpost <> $temp)
-			$input_errors[] = sprintf(gettext("Invalid characters detected (%s).  Please remove invalid characters and save again."),$temp);
-	}
+        /*  run through $_POST items encoding HTML entties so that the user
+         *  cannot think he is slick and perform a XSS attack on the unwilling
+         */
+        foreach ($_POST as $key => $value) 
+        if ($key <> "Submit")
+        {
+                $temp = str_replace(">", "", $value);
+                $newpost = htmlentities($temp);
+                if($newpost <> $temp)
+                        $input_errors[] = sprintf(gettext("Invalid characters detected (%s).  Please remove invalid characters and save again."),$temp);
+        }
 
 	/* input validation */
 	$reqdfields = explode(" ", "interface protocol source source_subnet destination destination_subnet");
 	$reqdfieldsn = array(gettext("Interface"),gettext("Protocol"),gettext("Source"),gettext("Source bit count"),gettext("Destination"),gettext("Destination bit count"));
 
-	do_input_validation($_POST, $reqdfields, $reqdfieldsn, $input_errors);
+	do_input_validation($_POST, $reqdfields, $reqdfieldsn, &$input_errors);
 
 	$protocol_uses_ports = in_array($_POST['protocol'], explode(" ", "any tcp udp tcp/udp"));
 
@@ -175,13 +176,13 @@ if ($_POST) {
 		$input_errors[] = gettext("A valid source bit count must be specified.");
 	}
 	if ($_POST['destination_type'] != "any") {
-		if ($_POST['destination'] && !is_ipaddroralias($_POST['destination'])) {
+        	if ($_POST['destination'] && !is_ipaddroralias($_POST['destination'])) {
 			$input_errors[] = gettext("A valid destination must be specified.");
 		}
 	}
-	if ($_POST['destination_subnet'] && !is_numericint($_POST['destination_subnet'])) {
-		$input_errors[] = gettext("A valid destination bit count must be specified.");
-	}
+        if ($_POST['destination_subnet'] && !is_numericint($_POST['destination_subnet'])) {
+            $input_errors[] = gettext("A valid destination bit count must be specified.");
+        }
 	if ($_POST['destination_type'] == "any") {
 		if ($_POST['destination_not']) {
 			$input_errors[] = gettext("Negating destination address of \"any\" is invalid.");
@@ -262,12 +263,6 @@ if ($_POST) {
 		} else {
 			unset($natent['staticnatport']);
 		}
-		
-		if(isset($_POST['disabled'])) {
-			$natent['disabled'] = true;
-		} else {
-			unset($natent['disabled']);
-		}
 
 		/* if user has selected not nat, set it here */
 		if(isset($_POST['nonat'])) {
@@ -353,32 +348,32 @@ function staticportchange() {
 	}
 }
 function typesel_change() {
-	switch (document.iform.destination_type.selectedIndex) {
-	case 1: // network
-		document.iform.destination.disabled = 0;
-		document.iform.destination_subnet.disabled = 0;
-		break;
-	default:
-		document.iform.destination.value = "";
-		document.iform.destination.disabled = 1;
-		document.iform.destination_subnet.value = "24";
-		document.iform.destination_subnet.disabled = 1;
-		break;
-	}
+    switch (document.iform.destination_type.selectedIndex) {
+        case 1: // network
+            document.iform.destination.disabled = 0;
+            document.iform.destination_subnet.disabled = 0;
+            break;
+        default:
+            document.iform.destination.value = "";
+            document.iform.destination.disabled = 1;
+            document.iform.destination_subnet.value = "24";
+            document.iform.destination_subnet.disabled = 1;
+            break;
+    }
 }
 function sourcesel_change() {
-	switch (document.iform.source_type.selectedIndex) {
-	case 1: // network
-		document.iform.source.disabled = 0;
-		document.iform.source_subnet.disabled = 0;
-		break;
-	default:
-		document.iform.source.value = "";
-		document.iform.source.disabled = 1;
-		document.iform.source_subnet.value = "24";
-		document.iform.source_subnet.disabled = 1;
-		break;
-	}
+    switch (document.iform.source_type.selectedIndex) {
+        case 1: // network
+            document.iform.source.disabled = 0;
+            document.iform.source_subnet.disabled = 0;
+            break;
+        default:
+	    document.iform.source.value = "";
+            document.iform.source.disabled = 1;
+            document.iform.source_subnet.value = "24";
+            document.iform.source_subnet.disabled = 1;
+            break;
+    }
 }
 function nonat_change() {
 	if (document.iform.nonat.checked) {
@@ -433,402 +428,289 @@ function poolopts_change() {
 <body link="#0000CC" vlink="#0000CC" alink="#0000CC">
 <?php include("fbegin.inc"); ?>
 <?php if ($input_errors) print_input_errors($input_errors); ?>
-<form action="firewall_nat_out_edit.php" method="post" name="iform" id="iform">
-	<table width="100%" border="0" cellpadding="6" cellspacing="1" summary="firewall nat outbound edit">
-		<tr>
-			<td colspan="2" valign="top" class="listtopic"><?=gettext("Edit Advanced Outbound NAT entry");?></td>
-		</tr>
+            <form action="firewall_nat_out_edit.php" method="post" name="iform" id="iform">
+              <table width="100%" border="0" cellpadding="6" cellspacing="1" summary="firewall nat outbound edit">
+				<tr>
+					<td colspan="2" valign="top" class="listtopic"><?=gettext("Edit Advanced Outbound NAT entry");?></td>
+				</tr>
 <?php
 		// Allow extending of the firewall edit page and include custom input validation 
 		pfSense_handle_custom_code("/usr/local/pkg/firewall_rules/htmlphpearly");
 ?>
-		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Disabled");?></td>
-			<td width="78%" class="vtable">
-				<input name="disabled" type="checkbox" id="disabled" value="yes" <?php if ($pconfig['disabled']) echo "checked=\"checked\""; ?> />
-				<strong><?=gettext("Disable this rule");?></strong><br />
-				<span class="vexpl"><?=gettext("Set this option to disable this rule without removing it from the list.");?></span>
-			</td>
-		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncell"><?=gettext("Do not NAT");?></td>
-			<td width="78%" class="vtable">
-				<input type="checkbox" name="nonat" id="nonat" onclick="nonat_change();" <?php if(isset($pconfig['nonat'])) echo " checked=\"checked\""; ?> />
-				<span class="vexpl"><?=gettext("Enabling this option will disable NAT for traffic matching this rule and stop processing Outbound NAT rules.");?>
-				<br/><?=gettext("Hint: in most cases, you won't use this option.");?></span>
-			</td>
-		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Interface");?></td>
-			<td width="78%" class="vtable">
-				<select name="interface" class="formselect">
-<?php
-					$iflist = get_configured_interface_with_descr(false, true);
-					foreach ($iflist as $if => $ifdesc)
-						if(have_ruleint_access($if))
-							$interfaces[$if] = $ifdesc;
-
-					if ($config['l2tp']['mode'] == "server")
-						if(have_ruleint_access("l2tp"))
-							$interfaces['l2tp'] = "L2TP VPN";
-
-					if ($config['pptpd']['mode'] == "server")
-						if(have_ruleint_access("pptp"))
-							$interfaces['pptp'] = "PPTP VPN";
-
-					if (is_pppoe_server_enabled() && have_ruleint_access("pppoe"))
-						$interfaces['pppoe'] = "PPPoE VPN";
-
-					/* add ipsec interfaces */
-					if (isset($config['ipsec']['enable']) || isset($config['ipsec']['client']['enable']))
-						if(have_ruleint_access("enc0"))
-							$interfaces["enc0"] = "IPsec";
-
-					/* add openvpn/tun interfaces */
-					if  ($config['openvpn']["openvpn-server"] || $config['openvpn']["openvpn-client"])
-						$interfaces["openvpn"] = "OpenVPN";
-
-					foreach ($interfaces as $iface => $ifacename):
-?>
-						<option value="<?=$iface;?>" <?php if ($iface == $pconfig['interface']) echo "selected=\"selected\""; ?>>
-							<?=htmlspecialchars($ifacename);?>
-						</option>
-<?php
-					endforeach;
-?>
-				</select><br/>
-				<span class="vexpl"><?=gettext("Choose which interface this rule applies to.");?><br/>
-					<?=gettext("Hint: in most cases, you'll want to use WAN here.");?>
-				</span>
-			</td>
-		</tr>
+	        <tr>
+                  <td width="22%" valign="top" class="vncell"><?=gettext("Do not NAT");?></td>
+                  <td width="78%" class="vtable">
+			<input type="checkbox" name="nonat" id="nonat" onclick="nonat_change();" <?php if(isset($pconfig['nonat'])) echo " checked=\"checked\""; ?> />
+                     <span class="vexpl"><?=gettext("Enabling this option will disable NAT for traffic matching this rule and stop processing Outbound NAT rules.");?>
+		     <br/><?=gettext("Hint: in most cases, you won't use this option.");?></span></td>
+                </tr>
+	        <tr>
+                  <td width="22%" valign="top" class="vncellreq"><?=gettext("Interface");?></td>
+                  <td width="78%" class="vtable">
+			<select name="interface" class="formselect">
+				<?php
+				$iflist = get_configured_interface_with_descr(false, true);
+				foreach ($iflist as $if => $ifdesc)
+					if(have_ruleint_access($if))
+						$interfaces[$if] = $ifdesc;
+
+				if ($config['l2tp']['mode'] == "server")
+					if(have_ruleint_access("l2tp"))
+						$interfaces['l2tp'] = "L2TP VPN";
+
+				if ($config['pptpd']['mode'] == "server")
+					if(have_ruleint_access("pptp"))
+						$interfaces['pptp'] = "PPTP VPN";
+
+				if (is_pppoe_server_enabled() && have_ruleint_access("pppoe"))
+					$interfaces['pppoe'] = "PPPoE VPN";
+
+				/* add ipsec interfaces */
+				if (isset($config['ipsec']['enable']) || isset($config['ipsec']['client']['enable']))
+					if(have_ruleint_access("enc0"))
+						$interfaces["enc0"] = "IPsec";
+
+				/* add openvpn/tun interfaces */
+				if  ($config['openvpn']["openvpn-server"] || $config['openvpn']["openvpn-client"])
+					$interfaces["openvpn"] = "OpenVPN";
+
+				foreach ($interfaces as $iface => $ifacename): ?>
+				<option value="<?=$iface;?>" <?php if ($iface == $pconfig['interface']) echo "selected=\"selected\""; ?>>
+				<?=htmlspecialchars($ifacename);?>
+				</option>
+				<?php endforeach; ?>
+			</select><br/>
+                     <span class="vexpl"><?=gettext("Choose which interface this rule applies to.");?><br/>
+                     <?=gettext("Hint: in most cases, you'll want to use WAN here.");?></span></td>
+                </tr>
 		<tr>
 			<td width="22%" valign="top" class="vncellreq"><?=gettext("Protocol");?></td>
 			<td width="78%" class="vtable">
 				<select name="protocol" class="formselect" onchange="proto_change();">
-<?php
-				$protocols = explode(" ", "any TCP UDP TCP/UDP ICMP ESP AH GRE IPV6 IGMP carp pfsync");
-				foreach ($protocols as $proto):
-?>
-					<option value="<?=strtolower($proto);?>" <?php if (strtolower($proto) == $pconfig['protocol']) echo "selected=\"selected\""; ?>><?=htmlspecialchars($proto);?></option>
-<?php
-				endforeach;
-?>
-				</select><br/>
-				<span class="vexpl"><?=gettext("Choose which protocol this rule should match.");?><br />
-<?php
-					printf(gettext("Hint: in most cases, you should specify %s any %s here."),"<em>","</em>&nbsp;");
-?>
-				</span>
-			</td>
-		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Source");?></td>
-			<td width="78%" class="vtable">
-				<table border="0" cellspacing="1" cellpadding="1" summary="source">
-					<tr>
-						<td><?=gettext("Type:");?>&nbsp;&nbsp;</td>
-						<td>
-							<select name="source_type" class="formselect" onchange="sourcesel_change()">
-								<option value="any" <?php if ($pconfig['source'] == "any") echo "selected=\"selected\""; ?>><?=gettext("any");?></option>
-								<option value="network" <?php if ($pconfig['source'] != "any") echo "selected=\"selected\""; ?>><?=gettext("Network");?></option>
-							</select>
-						</td>
-					</tr>
-					<tr>
-						<td><?=gettext("Address:");?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="source" type="text" autocomplete="off" class="formfldalias" id="source" size="20" value="<?=htmlspecialchars($pconfig['source']);?>" />/
-							<select name="source_subnet" class="formfld" id="source_subnet">
-<?php
-							for ($i = 32; $i >= 0; $i--):
-?>
-								<option value="<?=$i;?>"<?php if ($i == $pconfig['source_subnet']) echo " selected=\"selected\""; ?>><?=$i;?></option>
-<?php
-							endfor;
-?>
-							</select>
-						</td>
-					</tr>
-					<tr>
-						<td>&nbsp;</td>
-						<td>
-							<span class="vexpl"><?=gettext("Enter the source network for the outbound NAT mapping.");?></span>
-						</td>
-					</tr>
-					<tr name="sport_tr" id="sport_tr">
-						<td><?=gettext("Source port:");?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="sourceport" type="text" autocomplete="off" class="formfldalias" id="sourceport" size="5" value="<?=htmlspecialchars($pconfig['sourceport']);?>" />
-							<?=gettext("(leave blank for any)");?>
-						</td>
-					</tr>
-				</table>
+				<?php $protocols = explode(" ", "any TCP UDP TCP/UDP ICMP ESP AH GRE IPV6 IGMP carp pfsync");
+                                foreach ($protocols as $proto): ?>
+                                        <option value="<?=strtolower($proto);?>" <?php if (strtolower($proto) == $pconfig['protocol']) echo "selected=\"selected\""; ?>><?=htmlspecialchars($proto);?></option>
+				<?php endforeach; ?>
+				 </select> <br/> <span class="vexpl"><?=gettext("Choose which protocol this rule should match.");?><br />
+				 <?php printf(gettext("Hint: in most cases, you should specify %s any %s here."),"<em>","</em>&nbsp;");?></span>
 			</td>
 		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncellreq"><?=gettext("Destination");?></td>
-			<td width="78%" class="vtable">
-				<input name="destination_not" type="checkbox" id="destination_not" value="yes" <?php if ($pconfig['destination_not']) echo "checked=\"checked\""; ?> />
-				<strong><?=gettext("not");?></strong><br/>
-				<?=gettext("Use this option to invert the sense of the match.");?><br/>
-				<br/>
-				<table border="0" cellspacing="1" cellpadding="1" summary="destination">
-					<tr>
-						<td><?=gettext("Type:");?>&nbsp;&nbsp;</td>
-						<td>
-							<select name="destination_type" class="formselect" onchange="typesel_change()">
-								<option value="any"<?php if ($pconfig['destination'] == "any") echo " selected=\"selected\""; ?>>
-									<?=gettext("any");?>
-								</option>
-								<option value="network"<?php if ($pconfig['destination'] != "any") echo " selected=\"selected\""; ?>>
-									<?=gettext("Network");?>
-								</option>
-							</select>
-						</td>
-					</tr>
-					<tr>
-						<td><?=gettext("Address:");?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="destination" type="text" autocomplete="off" class="formfldalias" id="destination" size="20" value="<?=htmlspecialchars($pconfig['destination']);?>" />/
-							<select name="destination_subnet" class="formselect" id="destination_subnet">
-<?php
-							for ($i = 32; $i >= 0; $i--):
-?>
-								<option value="<?=$i;?>"<?php if ($i == $pconfig['destination_subnet']) echo " selected=\"selected\""; ?>><?=$i;?></option>
-<?php
-							endfor;
-?>
-							</select>
-						</td>
-					</tr>
-					<tr>
-						<td>&nbsp;</td>
-						<td>
-							<span class="vexpl"><?=gettext("Enter the destination network for the outbound NAT mapping.");?></span>
-						</td>
-					</tr>
-					<tr name="dport_tr" id="dport_tr">
-						<td><?=gettext("Destination port:");?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="dstport" type="text" autocomplete="off" class="formfldalias" id="dstport" size="5" value="<?=htmlspecialchars($pconfig['dstport']);?>" />
-							<?=gettext("(leave blank for any)");?>
-						</td>
-					</tr>
-				</table>
+                <tr>
+                  <td width="22%" valign="top" class="vncellreq"><?=gettext("Source");?></td>
+                  <td width="78%" class="vtable">
+                    <table border="0" cellspacing="1" cellpadding="1" summary="source">
+                      <tr>
+		        <td><?=gettext("Type:");?>&nbsp;&nbsp;</td>
+			<td>
+			    <select name="source_type" class="formselect" onchange="sourcesel_change()">
+                              <option value="any" <?php if ($pconfig['source'] == "any") echo "selected=\"selected\""; ?>><?=gettext("any");?></option>
+                              <option value="network" <?php if ($pconfig['source'] != "any") echo "selected=\"selected\""; ?>><?=gettext("Network");?></option>
+                            </select>
 			</td>
-		</tr>
-		<tr name="transtable" id="transtable">
-			<td width="22%" valign="top" class="vncell"><?=gettext("Translation");?></td>
-			<td width="78%" class="vtable">
-				<table border="0" cellspacing="1" cellpadding="1" summary="translation">
-					<tr>
-						<td><?=gettext("Address:");?>&nbsp;&nbsp;</td>
-						<td>
-							<select name="target" class="formselect" id="target" onchange="poolopts_change();">
-								<option value=""<?php if (!$pconfig['target']) echo " selected=\"selected\""; ?>>
-									<?=gettext("Interface address");?>
-								</option>
-<?php
-								if (is_array($config['virtualip']['vip'])):
-									foreach ($config['virtualip']['vip'] as $sn):
-										if (isset($sn['noexpand']))
-											continue;
-										if ($sn['mode'] == "proxyarp" && $sn['type'] == "network"):
-											$start = ip2long32(gen_subnet($sn['subnet'], $sn['subnet_bits']));
-											$end = ip2long32(gen_subnet_max($sn['subnet'], $sn['subnet_bits']));
-											$len = $end - $start;
-?>
-								<option value="<?=$sn['subnet'].'/'.$sn['subnet_bits'];?>" <?php if ($sn['subnet'].'/'.$sn['subnet_bits'] == $pconfig['target']) echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Subnet: {$sn['subnet']}/{$sn['subnet_bits']} ({$sn['descr']})");?>
-								</option>
-<?php
-											for ($i = 0; $i <= $len; $i++):
-												$snip = long2ip32($start+$i);
-?>
-								<option value="<?=$snip;?>" <?php if ($snip == $pconfig['target']) echo "selected"; ?>>
-									<?=htmlspecialchars("{$snip} ({$sn['descr']})");?>
-								</option>
-<?php
-											endfor;
-?>
-<?php
-										else:
-?>
-								<option value="<?=$sn['subnet'];?>" <?php if ($sn['subnet'] == $pconfig['target']) echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("{$sn['subnet']} ({$sn['descr']})");?>
-								</option>
-<?php
-										endif;
-									endforeach;
-								endif;
-								foreach ($a_aliases as $alias):
-									if ($alias['type'] != "host")
-										continue;
-?>
-								<option value="<?=$alias['name'];?>" <?php if ($alias['name'] == $pconfig['target']) echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Host Alias: {$alias['name']} ({$alias['descr']})");?>
-								</option>
-<?php
-								endforeach;
-?>
-								<option value="other-subnet"<?php if($pconfig['target'] == "other-subnet") echo " selected=\"selected\""; ?>>
-									<?=gettext("Other Subnet (Enter Below)");?>
-								</option>
-							</select>
-						</td>
-					</tr>
-
-					<tr id="target_network">
-						<td><?=gettext("Other Subnet:");?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="targetip" type="text" class="formfld unknown" id="targetip" size="20" value="<?=htmlspecialchars($pconfig['targetip']);?>" />/
-							<select name="targetip_subnet" class="formfld" id="targetip_subnet">
-<?php
-							for ($i = 32; $i >= 0; $i--):
-?>
-								<option value="<?=$i;?>"<?php if ($i == $pconfig['targetip_subnet']) echo " selected=\"selected\""; ?>><?=$i;?></option>
-<?php
-							endfor;
+                      </tr>
+                      <tr>
+                        <td><?=gettext("Address:");?>&nbsp;&nbsp;</td>
+                        <td><input name="source" type="text" autocomplete="off" class="formfldalias" id="source" size="20" value="<?=htmlspecialchars($pconfig['source']);?>" />/<select name="source_subnet" class="formfld" id="source_subnet">
+<?php for ($i = 32; $i >= 0; $i--): ?>
+                          <option value="<?=$i;?>"<?php if ($i == $pconfig['source_subnet']) echo " selected=\"selected\""; ?>><?=$i;?></option>
+<?php endfor; ?>
+                          </select></td>
+                      </tr>
+                      <tr>
+                        <td>&nbsp;</td>
+                        <td><span class="vexpl"><?=gettext("Enter the source network for the outbound NAT mapping.");?></span></td>
+                      </tr>
+                      <tr name="sport_tr" id="sport_tr">
+                        <td><?=gettext("Source port:");?>&nbsp;&nbsp;</td>
+                        <td><input name="sourceport" type="text" autocomplete="off" class="formfldalias" id="sourceport" size="5" value="<?=htmlspecialchars($pconfig['sourceport']);?>" /> <?=gettext("(leave blank for any)");?></td>
+                      </tr>
+                    </table></td>
+                </tr>
+                <tr>
+                  <td width="22%" valign="top" class="vncellreq"><?=gettext("Destination");?></td>
+                  <td width="78%" class="vtable">
+<input name="destination_not" type="checkbox" id="destination_not" value="yes" <?php if ($pconfig['destination_not']) echo "checked=\"checked\""; ?> />
+                    <strong><?=gettext("not");?></strong><br/>
+                    <?=gettext("Use this option to invert the sense of the match.");?><br/>
+                    <br/>
+                    <table border="0" cellspacing="1" cellpadding="1" summary="destination">
+                      <tr>
+                        <td><?=gettext("Type:");?>&nbsp;&nbsp;</td>
+                        <td><select name="destination_type" class="formselect" onchange="typesel_change()">
+                            <option value="any"<?php if ($pconfig['destination'] == "any") echo " selected=\"selected\""; ?>>
+                            <?=gettext("any");?></option>
+                            <option value="network"<?php if ($pconfig['destination'] != "any") echo " selected=\"selected\""; ?>>
+                            <?=gettext("Network");?></option>
+                          </select></td>
+                      </tr>
+                      <tr>
+                        <td><?=gettext("Address:");?>&nbsp;&nbsp;</td>
+                        <td><input name="destination" type="text" autocomplete="off" class="formfldalias" id="destination" size="20" value="<?=htmlspecialchars($pconfig['destination']);?>" />
+                          /
+                          <select name="destination_subnet" class="formselect" id="destination_subnet">
+<?php for ($i = 32; $i >= 0; $i--): ?>
+                            <option value="<?=$i;?>"<?php if ($i == $pconfig['destination_subnet']) echo " selected=\"selected\""; ?>><?=$i;?></option>
+<?php endfor; ?>
+                          </select> </td>
+                      </tr>
+                      <tr>
+                        <td>&nbsp;</td>
+                        <td><span class="vexpl"><?=gettext("Enter the destination network for ".
+                          "the outbound NAT mapping.");?></span></td>
+                      </tr>
+                      <tr name="dport_tr" id="dport_tr">
+                        <td><?=gettext("Destination port:");?>&nbsp;&nbsp;</td>
+                        <td><input name="dstport" type="text" autocomplete="off" class="formfldalias" id="dstport" size="5" value="<?=htmlspecialchars($pconfig['dstport']);?>" /> <?=gettext("(leave blank for any)");?></td>
+                      </tr>
+                    </table>
+		  </td>
+                </tr>
+                <tr name="transtable" id="transtable">
+                  <td width="22%" valign="top" class="vncell"><?=gettext("Translation");?></td>
+                  <td width="78%" class="vtable">
+			<table border="0" cellspacing="1" cellpadding="1" summary="translation">
+			<tr>
+			  <td><?=gettext("Address:");?>&nbsp;&nbsp;</td>
+			  <td><select name="target" class="formselect" id="target" onchange="poolopts_change();">
+				<option value=""<?php if (!$pconfig['target']) echo " selected=\"selected\""; ?>><?=gettext("Interface address");?></option>
+<?php	if (is_array($config['virtualip']['vip'])):
+		foreach ($config['virtualip']['vip'] as $sn):
+			if (isset($sn['noexpand']))
+				continue;
+			if ($sn['mode'] == "proxyarp" && $sn['type'] == "network"):
+				$start = ip2long32(gen_subnet($sn['subnet'], $sn['subnet_bits']));
+				$end = ip2long32(gen_subnet_max($sn['subnet'], $sn['subnet_bits']));
+				$len = $end - $start; ?>
+				<option value="<?=$sn['subnet'].'/'.$sn['subnet_bits'];?>" <?php if ($sn['subnet'].'/'.$sn['subnet_bits'] == $pconfig['target']) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Subnet: {$sn['subnet']}/{$sn['subnet_bits']} ({$sn['descr']})");?></option>
+			<?php	for ($i = 0; $i <= $len; $i++):
+					$snip = long2ip32($start+$i);
 ?>
-							</select>
-						</td>
-					</tr>
-
-					<tr>
-						<td>&nbsp;</td>
-						<td>
-							<span class="vexpl"><?=gettext("Packets matching this rule will be mapped to the IP address given here.");?><br/>
-								<?=gettext("If you want this rule to apply to another IP address rather than the IP address of the interface chosen above, ".
-								"select it here (you will need to define ");?>
-								<a href="firewall_virtual_ip.php"><?=gettext("Virtual IP");?></a>
-								<?=gettext("addresses on the interface first).");?>
-							</span><br/>
-						</td>
-					</tr>
-					<tr id="poolopts_tr">
-						<td valign="top">Pool Options</td>
-						<td>
-							<select name="poolopts" id="poolopts">
-								<option value="" <?php if ($pconfig['poolopts'] == "") echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Default");?>
-								</option>
-								<option value="round-robin" <?php if ($pconfig['poolopts'] == "round-robin") echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Round Robin");?>
-								</option>
-								<option value="round-robin sticky-address" <?php if ($pconfig['poolopts'] == "round-robin sticky-address") echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Round Robin with Sticky Address");?>
-								</option>
-								<option value="random" <?php if ($pconfig['poolopts'] == "random") echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Random");?>
-								</option>
-								<option value="random sticky-address" <?php if ($pconfig['poolopts'] == "random sticky-address") echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Random with Sticky Address");?>
-								</option>
-								<option value="source-hash" <?php if ($pconfig['poolopts'] == "source-hash") echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Source Hash");?>
-								</option>
-								<option value="bitmask" <?php if ($pconfig['poolopts'] == "bitmask") echo "selected=\"selected\""; ?>>
-									<?=htmlspecialchars("Bitmask");?>
-								</option>
-							</select>
-							<br/>
-							<span class="vexpl">
-								<?=gettext("Only Round Robin types work with Host Aliases. Any type can be used with a Subnet.");?><br/>
-								* <?=gettext("Round Robin: Loops through the translation addresses.");?><br/>
-								* <?=gettext("Random: Selects an address from the translation address pool at random.");?><br/>
-								* <?=gettext("Source Hash: Uses a hash of the source address to determine the translation address, ensuring that the redirection address is always the same for a given source.");?><br/>
-								* <?=gettext("Bitmask: Applies the subnet mask and keeps the last portion identical; 10.0.1.50 -&gt; x.x.x.50.");?><br/>
-								* <?=gettext("Sticky Address: The Sticky Address option can be used with the Random and Round Robin pool types to ensure that a particular source address is always mapped to the same translation address.");?><br/>
-							</span><br/>
-						</td>
-					</tr>
-					<tr name="tport_tr" id="tport_tr">
-						<td><?=gettext("Port:");?>&nbsp;&nbsp;</td>
-						<td>
-							<input name="natport" type="text" class="formfld unknown" id="natport" size="5" value="<?=htmlspecialchars($pconfig['natport']);?>" />
-						</td>
-					</tr>
-					<tr name="tporttext_tr" id="tporttext_tr">
-						<td>&nbsp;</td>
-						<td>
-							<span class="vexpl"><?=gettext("Enter the source port for the outbound NAT mapping.");?></span>
-						</td>
-					</tr>
-					<tr name="tportstatic_tr" id="tportstatic_tr">
-						<td><?=gettext("Static-port:");?>&nbsp;&nbsp;</td>
-						<td><input onchange="staticportchange();" name="staticnatport" type="checkbox" class="formfld" id="staticnatport" size="5"<?php if($pconfig['staticnatport']) echo " checked=\"checked\"";?> /></td>
-					</tr>
-				</table>
-			</td>
-		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncell"><?=gettext("No XMLRPC Sync");?></td>
-			<td width="78%" class="vtable">
-				<input value="yes" name="nosync" type="checkbox" class="formfld" id="nosync"<?php if($pconfig['nosync']) echo " checked=\"checked\""; ?> /><br/>
-				<?=gettext("Hint: This prevents the rule on Master from automatically syncing to other CARP members. This does NOT prevent the rule from being overwritten on Slave.");?>
-			</td>
-		</tr>
-		<tr>
-			<td width="22%" valign="top" class="vncell"><?=gettext("Description");?></td>
-			<td width="78%" class="vtable">
-				<input name="descr" type="text" class="formfld unknown" id="descr" size="40" value="<?=htmlspecialchars($pconfig['descr']);?>" />
-				<br/>
-				<span class="vexpl"><?=gettext("You may enter a description here for your reference (not parsed).");?></span>
-			</td>
-		</tr>
+				<option value="<?=$snip;?>" <?php if ($snip == $pconfig['target']) echo "selected"; ?>><?=htmlspecialchars("{$snip} ({$sn['descr']})");?></option>
+				<?php endfor; ?>
+			<?php else: ?>
+				<option value="<?=$sn['subnet'];?>" <?php if ($sn['subnet'] == $pconfig['target']) echo "selected=\"selected\""; ?>><?=htmlspecialchars("{$sn['subnet']} ({$sn['descr']})");?></option>
+<?php 		endif; endforeach;
+	endif;
+	foreach ($a_aliases as $alias):
+		if ($alias['type'] != "host")
+			continue; ?>
+				<option value="<?=$alias['name'];?>" <?php if ($alias['name'] == $pconfig['target']) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Host Alias: {$alias['name']} ({$alias['descr']})");?></option>
+<?php	endforeach; ?>
+				<option value="other-subnet"<?php if($pconfig['target'] == "other-subnet") echo " selected=\"selected\""; ?>><?=gettext("Other Subnet (Enter Below)");?></option>
+			  </select>
+			  </td>
+			</tr>
+
+			<tr id="target_network">
+				<td><?=gettext("Other Subnet:");?>&nbsp;&nbsp;</td>
+				<td>
+					<input name="targetip" type="text" class="formfld unknown" id="targetip" size="20" value="<?=htmlspecialchars($pconfig['targetip']);?>" />/<select name="targetip_subnet" class="formfld" id="targetip_subnet">
+<?php for ($i = 32; $i >= 0; $i--): ?>
+					<option value="<?=$i;?>"<?php if ($i == $pconfig['targetip_subnet']) echo " selected=\"selected\""; ?>><?=$i;?></option>
+<?php endfor; ?>
+					</select>
+				</td>
+			</tr>
+
+			<tr><td>&nbsp;</td><td>
+				<span class="vexpl"><?=gettext("Packets matching this rule will be mapped to the IP address given here.");?><br/>
+				<?=gettext("If you want this rule to apply to another IP address rather than the IP address of the interface chosen above, ".
+				"select it here (you will need to define ");?> <a href="firewall_virtual_ip.php"><?=gettext("Virtual IP");?></a> <?=gettext("addresses on the interface first).");?>
+				</span><br/>
+			</td></tr>
+			<tr id="poolopts_tr">
+				<td valign="top">Pool Options</td>
+				<td>
+				<select name="poolopts" id="poolopts">
+					<option value=""                           <?php if ($pconfig['poolopts'] == ""                          ) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Default"                        );?></option>
+					<option value="round-robin"                <?php if ($pconfig['poolopts'] == "round-robin"               ) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Round Robin"                    );?></option>
+					<option value="round-robin sticky-address" <?php if ($pconfig['poolopts'] == "round-robin sticky-address") echo "selected=\"selected\""; ?>><?=htmlspecialchars("Round Robin with Sticky Address");?></option>
+					<option value="random"                     <?php if ($pconfig['poolopts'] == "random"                    ) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Random"                         );?></option>
+					<option value="random sticky-address"      <?php if ($pconfig['poolopts'] == "random sticky-address"     ) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Random with Sticky Address"     );?></option>
+					<option value="source-hash"                <?php if ($pconfig['poolopts'] == "source-hash"               ) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Source Hash"                    );?></option>
+					<option value="bitmask"                    <?php if ($pconfig['poolopts'] == "bitmask"                   ) echo "selected=\"selected\""; ?>><?=htmlspecialchars("Bitmask"                        );?></option>
+				</select><br/>
+				<span class="vexpl">
+					<?=gettext("Only Round Robin types work with Host Aliases. Any type can be used with a Subnet.");?><br/>
+					* <?=gettext("Round Robin: Loops through the translation addresses.");?><br/>
+					* <?=gettext("Random: Selects an address from the translation address pool at random.");?><br/>
+					* <?=gettext("Source Hash: Uses a hash of the source address to determine the translation address, ensuring that the redirection address is always the same for a given source.");?><br/>
+					* <?=gettext("Bitmask: Applies the subnet mask and keeps the last portion identical; 10.0.1.50 -&gt; x.x.x.50.");?><br/>
+					* <?=gettext("Sticky Address: The Sticky Address option can be used with the Random and Round Robin pool types to ensure that a particular source address is always mapped to the same translation address.");?><br/>
+				</span><br/>
+				</td>
+			</tr>
+			<tr name="tport_tr" id="tport_tr">
+                          <td><?=gettext("Port:");?>&nbsp;&nbsp;</td>
+                          <td><input name="natport" type="text" class="formfld unknown" id="natport" size="5" value="<?=htmlspecialchars($pconfig['natport']);?>" /></td>
+			</tr>
+			<tr name="tporttext_tr" id="tporttext_tr"><td>&nbsp;</td><td>
+                        <span class="vexpl"><?=gettext("Enter the source port for the outbound NAT mapping.");?></span>
+			</td></tr>
+                        <tr name="tportstatic_tr" id="tportstatic_tr">
+                          <td><?=gettext("Static-port:");?>&nbsp;&nbsp;</td>
+                          <td><input onchange="staticportchange();" name="staticnatport" type="checkbox" class="formfld" id="staticnatport" size="5"<?php if($pconfig['staticnatport']) echo " checked=\"checked\"";?> /></td>
+			</tr>
+			</table>
+		  </td>
+                </tr>
+				<tr>
+				  <td width="22%" valign="top" class="vncell"><?=gettext("No XMLRPC Sync");?></td>
+				  <td width="78%" class="vtable">
+					<input value="yes" name="nosync" type="checkbox" class="formfld" id="nosync"<?php if($pconfig['nosync']) echo " checked=\"checked\""; ?> /><br/>
+						<?=gettext("Hint: This prevents the rule on Master from automatically syncing to other CARP members. This does NOT prevent the rule from being overwritten on Slave.");?>
+				  </td>
+				</tr>
+                <tr>
+                  <td width="22%" valign="top" class="vncell"><?=gettext("Description");?></td>
+                  <td width="78%" class="vtable">
+                    <input name="descr" type="text" class="formfld unknown" id="descr" size="40" value="<?=htmlspecialchars($pconfig['descr']);?>" />
+                    <br/> <span class="vexpl"><?=gettext("You may enter a description here " .
+                    "for your reference (not parsed).");?></span></td>
+          </tr>
 <?php
-	$has_created_time = (isset($a_out[$id]['created']) && is_array($a_out[$id]['created']));
-	$has_updated_time = (isset($a_out[$id]['updated']) && is_array($a_out[$id]['updated']));
-	if ($has_created_time || $has_updated_time):
+$has_created_time = (isset($a_out[$id]['created']) && is_array($a_out[$id]['created']));
+$has_updated_time = (isset($a_out[$id]['updated']) && is_array($a_out[$id]['updated']));
 ?>
+		<?php if ($has_created_time || $has_updated_time): ?>
 		<tr>
 			<td>&nbsp;</td>
 		</tr>
 		<tr>
 			<td colspan="2" valign="top" class="listtopic"><?=gettext("Rule Information");?></td>
 		</tr>
-<?php
-		if ($has_created_time):
-?>
+		<?php if ($has_created_time): ?>
 		<tr>
 			<td width="22%" valign="top" class="vncell"><?=gettext("Created");?></td>
 			<td width="78%" class="vtable">
 				<?= date(gettext("n/j/y H:i:s"), $a_out[$id]['created']['time']) ?> <?= gettext("by") ?> <strong><?= $a_out[$id]['created']['username'] ?></strong>
 			</td>
 		</tr>
-<?php
-		endif;
-
-		if ($has_updated_time):
-?>
+		<?php endif; ?>
+		<?php if ($has_updated_time): ?>
 		<tr>
 			<td width="22%" valign="top" class="vncell"><?=gettext("Updated");?></td>
 			<td width="78%" class="vtable">
 				<?= date(gettext("n/j/y H:i:s"), $a_out[$id]['updated']['time']) ?> <?= gettext("by") ?> <strong><?= $a_out[$id]['updated']['username'] ?></strong>
 			</td>
 		</tr>
+		<?php endif; ?>
+		<?php endif; ?>
 <?php
-		endif;
-	endif;
-	// Allow extending of the firewall edit page and include custom input validation 
-	pfSense_handle_custom_code("/usr/local/pkg/firewall_aon/htmlphplate");
-?>
-		<tr>
-			<td width="22%" valign="top">&nbsp;</td>
-			<td width="78%">
-				<input name="Submit" type="submit" class="formbtn" value="<?=gettext("Save"); ?>" /> <input type="button" class="formbtn" value="<?=gettext("Cancel");?>" onclick="history.back()" />
-<?php
-			if (isset($id) && $a_out[$id]):
-?>
-				<input name="id" type="hidden" value="<?=htmlspecialchars($id);?>" />
-<?php
-			endif;
+		// Allow extending of the firewall edit page and include custom input validation 
+		pfSense_handle_custom_code("/usr/local/pkg/firewall_aon/htmlphplate");
 ?>
-				<input name="after" type="hidden" value="<?=htmlspecialchars($after);?>" />
-			</td>
-		</tr>
-	</table>
+                <tr>
+                  <td width="22%" valign="top">&nbsp;</td>
+                  <td width="78%">
+                    <input name="Submit" type="submit" class="formbtn" value="<?=gettext("Save"); ?>" /> <input type="button" class="formbtn" value="<?=gettext("Cancel");?>" onclick="history.back()" />
+                    <?php if (isset($id) && $a_out[$id]): ?>
+                    <input name="id" type="hidden" value="<?=htmlspecialchars($id);?>" />
+                    <?php endif; ?>
+                    <input name="after" type="hidden" value="<?=htmlspecialchars($after);?>" />
+                  </td>
+                </tr>
+              </table>
 </form>
 <script type="text/javascript">
 //<![CDATA[
@@ -840,7 +722,7 @@ function poolopts_change() {
 	poolopts_change();
 
 	var addressarray = <?= json_encode(get_alias_list(array("host", "network", "openvpn", "urltable"))) ?>;
-	var customarray  = <?= json_encode(get_alias_list(array("port", "url_ports", "urltable_ports"))) ?>;
+	var customarray  = <?= json_encode(get_alias_list("port")) ?>;
 
 	var oTextbox1 = new AutoSuggestControl(document.getElementById("source"), new StateSuggestions(addressarray));
 	var oTextbox2 = new AutoSuggestControl(document.getElementById("sourceport"), new StateSuggestions(customarray));
-- 
1.9.1

